#version 300 es
precision highp float;

uniform vec3 u_Eye, u_Ref, u_Up;
uniform vec2 u_Dimensions;
uniform sampler2D u_Image1;



in vec2 fs_Pos;
out vec4 out_Col;

// const float array[25] = float[25](
//   0.003765,	0.015019,	0.023792,	0.015019,	0.003765,
//   0.015019,	0.059912,	0.094907,	0.059912,	0.015019,
//   0.023792,	0.094907,	0.150342,	0.094907,	0.023792,
//   0.015019,	0.059912,	0.094907,	0.059912,	0.015019,
//   0.003765,	0.015019,	0.023792,	0.015019,	0.003765
// );

// const float array[121] = float[121](
//   0.0	      , 0.0	      , 0.0	      , 0.0	      , 0.000001, 0.000001, 0.000001, 0.0	    , 0.0	    , 0.0	    , 0.0,
//   0.0	      , 0.0	      , 0.000001  , 0.000014  , 0.000055, 0.000088, 0.000055, 0.000014, 0.000001, 0.0	    , 0.0,
//   0.0	      , 0.000001  , 0.000036  , 0.000362  , 0.001445, 0.002289, 0.001445, 0.000362, 0.000036, 0.000001, 0.0,
//   0.0	      , 0.000014  , 0.000362  , 0.003672  , 0.014648, 0.023204, 0.014648, 0.003672, 0.000362, 0.000014, 0.0,
//   0.000001  , 0.000055  , 0.001445  , 0.014648  , 0.058433, 0.092564, 0.058433, 0.014648, 0.001445, 0.000055, 0.000001,
//   0.000001  , 0.000088  , 0.002289  , 0.023204  , 0.092564, 0.146632, 0.092564, 0.023204, 0.002289, 0.000088, 0.000001,
//   0.000001  , 0.000055  , 0.001445  , 0.014648  , 0.058433, 0.092564, 0.058433, 0.014648, 0.001445, 0.000055, 0.000001,
//   0.0	      , 0.000014  , 0.000362  , 0.003672  , 0.014648, 0.023204, 0.014648, 0.003672, 0.000362, 0.000014, 0.0,
//   0.0	      , 0.000001  , 0.000036  , 0.000362  , 0.001445, 0.002289, 0.001445, 0.000362, 0.000036, 0.000001, 0.0,
//   0.0	      , 0.0	      , 0.000001  , 0.000014  , 0.000055, 0.000088, 0.000055, 0.000014, 0.000001, 0.0	    , 0.0,
//   0.0	      , 0.0	      , 0.0	      , 0.0	      , 0.000001, 0.000001, 0.000001, 0.0     , 0.0	    , 0.0	    , 0.0
// );

// const float array[121] = float[121](
//   0.004411, 0.005278, 0.006068, 0.006704, 0.007117, 0.007260, 0.007117, 0.006704, 0.006068, 0.005278, 0.004411,
//   0.005278, 0.006315, 0.007260, 0.008021, 0.008515, 0.008687, 0.008515, 0.008021, 0.007260, 0.006315, 0.005278,
//   0.006068, 0.007260, 0.008347, 0.009222, 0.009790, 0.009988, 0.009790, 0.009222, 0.008347, 0.007260, 0.006068,
//   0.006704, 0.008021, 0.009222, 0.010189, 0.010817, 0.011034, 0.010817, 0.010189, 0.009222, 0.008021, 0.006704,
//   0.007117, 0.008515, 0.009790, 0.010817, 0.011483, 0.011714, 0.011483, 0.010817, 0.009790, 0.008515, 0.007117,
//   0.007260, 0.008687, 0.009988, 0.011034, 0.011714, 0.011950, 0.011714, 0.011034, 0.009988, 0.008687, 0.007260,
//   0.007117, 0.008515, 0.009790, 0.010817, 0.011483, 0.011714, 0.011483, 0.010817, 0.009790, 0.008515, 0.007117,
//   0.006704, 0.008021, 0.009222, 0.010189, 0.010817, 0.011034, 0.010817, 0.010189, 0.009222, 0.008021, 0.006704,
//   0.006068, 0.007260, 0.008347, 0.009222, 0.009790, 0.009988, 0.009790, 0.009222, 0.008347, 0.007260, 0.006068,
//   0.005278, 0.006315, 0.007260, 0.008021, 0.008515, 0.008687, 0.008515, 0.008021, 0.007260, 0.006315, 0.005278,
//   0.004411, 0.005278, 0.006068, 0.006704, 0.007117, 0.007260, 0.007117, 0.006704, 0.006068, 0.005278, 0.004411

// );

const float array[121] = float[121](
  0.001283, 0.002106, 0.003096, 0.004077, 0.004809, 0.005081, 0.004809, 0.004077, 0.003096, 0.002106, 0.001283,
  0.002106, 0.003456, 0.005081, 0.006691, 0.007892, 0.008339, 0.007892, 0.006691, 0.005081, 0.003456, 0.002106,
  0.003096, 0.005081, 0.007469, 0.009836, 0.011602, 0.012258, 0.011602, 0.009836, 0.007469, 0.005081, 0.003096,
  0.004077, 0.006691, 0.009836, 0.012952, 0.015277, 0.016142, 0.015277, 0.012952, 0.009836, 0.006691, 0.004077,
  0.004809, 0.007892, 0.011602, 0.015277, 0.018020, 0.019040, 0.018020, 0.015277, 0.011602, 0.007892, 0.004809,
  0.005081, 0.008339, 0.012258, 0.016142, 0.019040, 0.020117, 0.019040, 0.016142, 0.012258, 0.008339, 0.005081,
  0.004809, 0.007892, 0.011602, 0.015277, 0.018020, 0.019040, 0.018020, 0.015277, 0.011602, 0.007892, 0.004809,
  0.004077, 0.006691, 0.009836, 0.012952, 0.015277, 0.016142, 0.015277, 0.012952, 0.009836, 0.006691, 0.004077,
  0.003096, 0.005081, 0.007469, 0.009836, 0.011602, 0.012258, 0.011602, 0.009836, 0.007469, 0.005081, 0.003096,
  0.002106, 0.003456, 0.005081, 0.006691, 0.007892, 0.008339, 0.007892, 0.006691, 0.005081, 0.003456, 0.002106,
  0.001283, 0.002106, 0.003096, 0.004077, 0.004809, 0.005081, 0.004809, 0.004077, 0.003096, 0.002106, 0.001283


);

void main() {

  float x = 0.5 * (fs_Pos.x + 1.0);
  float y = 0.5 * (fs_Pos.y + 1.0);
  

  float pixDimx = 1.0 / float(u_Dimensions.x);
  float pixDimy = 1.0 / float(u_Dimensions.y);

  vec4 accumColor = vec4(0.0);

  int count = 0;
  for (int i = -10; i <= 10; i++) {
    for (int j = -10; j <= 10; j++) {
        vec4 curr_color = texture(u_Image1, vec2(x + float(j) * (pixDimx), y + float(i) * (pixDimy)));
        float scale = array[count];
        accumColor = accumColor + (scale * curr_color);
        count++;

    }
  }

  // accumColor = texture(u_Image1, vec2( x,  y));
  out_Col = vec4(accumColor.rgb, 1.0);

}
